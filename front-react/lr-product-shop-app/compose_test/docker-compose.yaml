version: '3.8'

services:
  # nginx:
  #   container_name: nginx-api
  #   image: nginx:latest
  #   ports:
  #     - "1000:80"
  #   depends_on:
  #     product-shop-back:
  #       condition: service_healthy
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   networks:
  #     - product-shop-network

  product-shop-front-app:
    container_name: product-shop-front-app
    image: levs2001/lr-product-shop-app:0.0.4
    ports:
      - "3000:3000"
    build:
      context: ../
      args:
        NEXT_PUBLIC_BACKEND_URL: http://localhost:8080/
    networks:
      - product-shop-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'

  product-shop-back:
    container_name: product-shop-back
    image: levs2001/lr-product-shop:0.0.3-pl
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_URI=jdbc:postgresql://product-shop-db:5432/product_shop
    healthcheck:
      test: ["CMD", "echo", "0"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - product-shop-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    
  product-shop-db:
    container_name: product-shop-db
    image: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: example
    networks:
      - product-shop-network
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
          
networks:
  product-shop-network:
    driver: bridge